generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Clientes {
  clientId String @unique
  clientNumber String @unique
  nome String
  telef Int @unique
  nif Int @unique
  ccid String @unique
  muradaBill String
  codPost String
  localidadeBill String
  email String @unique
  password String?
  billEletronic Boolean
  accountState Int @default(0)
  saldo Float
  contracts Contracts[]
  documents DocumentsHeader[]
}

model Tariffs {
  id String @unique
  name String
  priceDuringContract Float
  priceAfterContract Float?
  repeat Int
  description String
  observation String @db.LongText
  appsLimit String
  streamingLimit String
  netLimit String
  haveFidelization Boolean
  fidelizationTime Int?
  paidType Int
  contracts Contracts[]
}

model Contracts {
  contractId String @unique
  clientAssociation Clientes @relation(fields: [clientId], references: [clientId])
  clientId String
  startContract DateTime?
  nextCobration DateTime?
  tarrifAssociated Tariffs @relation(fields: [tarrifId], references: [id])
  tarrifId String
  fidelizationDuration Int?
  priceDuringContract Float
  priceAfterContract Float?
  isContract Boolean
  endContract DateTime?
  paidType Int
  state Int @default(0)
}

model DocumentsHeader {
  id String @unique
  type Int
  docDescription String
  documentTotal Float
  documentTotalIvaVT Float?
  documentTotalIvaTR Float?
  documentTotalIvaSS Float?
  clientAssociated Clientes @relation(fields: [clientId], references: [clientId])
  clientId String
  docNumber Int
  serieAssociated Series @relation(fields: [serieId], references: [serieId])
  serieId Int
  payMethod Int
  typePeriodPay Int
  vencimento DateTime
  date DateTime
  softwareCode String
  atCode String
  createdBy String
  mbReference String?
  observations String?
  details DocumentsBody[]
}

model DocumentsBody {
  detailId String @unique
  documentAssociated DocumentsHeader @relation(fields: [documentId], references: [id])
  documentId String
  descriptionItem String
  ivaItem Int
  priceItemIva Float
  qtdItem Int
}

model Series {
  serieId Int @unique @default(autoincrement())
  serieNumber String
  expiration String
  lastDocNumber Int
  Documents DocumentsHeader[]
}

model DocsTempTokens {
  tempTokenId String @unique
  docId String
  expiration DateTime
}